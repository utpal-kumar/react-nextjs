{"ast":null,"code":"var _jsxFileName = \"F:\\\\Carlos Apps\\\\NextJS\\\\nextJSApp\\\\react-nextjs\\\\components\\\\customerComponent.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nclass CustomerComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    var me = this;\n    me.state = {\n      isToggleOn: true,\n      customer: {\n        Name: ''\n      }\n    }; // This binding is necessary to make `this` work in the callback\n\n    me.handleClick = this.handleClick.bind(this);\n    me.init();\n  }\n\n  async init() {\n    var me = this;\n    const res = await fetch(`https://core.aclaro.ai/api/Customer/GetScheduleCustomerInfo?DealerGroupId=3&ScheduleEmail=carlos.galarce%40yahoo.com&JsonToken=abc%40%23%24%25%5E123456789RTRTRRVBV`);\n    const data = await res.json();\n    me.setState(state => ({\n      isToggleOn: !state.isToggleOn,\n      customer: {\n        Name: data.Data.Customer.Name\n      }\n    }));\n  }\n\n  async handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"About Name: \", this.state.customer.Name, __jsx(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, this.state.isToggleOn ? 'ON' : 'OFF'));\n  }\n\n}\n\nexport default CustomerComponent;","map":{"version":3,"sources":["F:/Carlos Apps/NextJS/nextJSApp/react-nextjs/components/customerComponent.js"],"names":["CustomerComponent","React","Component","constructor","props","me","state","isToggleOn","customer","Name","handleClick","bind","init","res","fetch","data","json","setState","Data","Customer","render"],"mappings":";;;;AAAA,MAAMA,iBAAN,SAAgCC,KAAK,CAACC,SAAtC,CAAgD;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,QAAIC,EAAE,GAAG,IAAT;AAEAA,IAAAA,EAAE,CAACC,KAAH,GAAW;AAAEC,MAAAA,UAAU,EAAE,IAAd;AAAoBC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAA9B,KAAX,CALe,CAQf;;AACAJ,IAAAA,EAAE,CAACK,WAAH,GAAiB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAjB;AAEAN,IAAAA,EAAE,CAACO,IAAH;AACH;;AAED,QAAMA,IAAN,GAAa;AACT,QAAIP,EAAE,GAAG,IAAT;AAEA,UAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAE,qKAAF,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAX,IAAAA,EAAE,CAACY,QAAH,CAAYX,KAAK,KAAK;AAClBC,MAAAA,UAAU,EAAE,CAACD,KAAK,CAACC,UADD;AAElBC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAEM,IAAI,CAACG,IAAL,CAAUC,QAAV,CAAmBV;AAA3B;AAFQ,KAAL,CAAjB;AAIH;;AAED,QAAMC,WAAN,GAAoB;AAChB,SAAKO,QAAL,CAAcX,KAAK,KAAK;AACpBC,MAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AADC,KAAL,CAAnB;AAGH;;AAEDa,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkB,KAAKd,KAAL,CAAWE,QAAX,CAAoBC,IAAtC,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B,KADpC,CAFJ,CADJ;AAQH;;AA1C2C;;AA6ChD,eAAeP,iBAAf","sourcesContent":["class CustomerComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        var me = this;\r\n\r\n        me.state = { isToggleOn: true, customer: { Name: '' }};\r\n\r\n\r\n        // This binding is necessary to make `this` work in the callback\r\n        me.handleClick = this.handleClick.bind(this); \r\n\r\n        me.init();\r\n    }\r\n\r\n    async init() {\r\n        var me = this;\r\n\r\n        const res = await fetch(`https://core.aclaro.ai/api/Customer/GetScheduleCustomerInfo?DealerGroupId=3&ScheduleEmail=carlos.galarce%40yahoo.com&JsonToken=abc%40%23%24%25%5E123456789RTRTRRVBV`)\r\n        const data = await res.json();\r\n        \r\n        me.setState(state => ({\r\n            isToggleOn: !state.isToggleOn,\r\n            customer: { Name: data.Data.Customer.Name }\r\n        }));\r\n    } \r\n\r\n    async handleClick() {\r\n        this.setState(state => ({\r\n            isToggleOn: !state.isToggleOn\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>About Name: {this.state.customer.Name}\r\n\r\n                <button onClick={this.handleClick}>\r\n                    {this.state.isToggleOn ? 'ON' : 'OFF'}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomerComponent;"]},"metadata":{},"sourceType":"module"}